specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  {{#nft721Address}}
  - kind: ethereum/contract
    name: NFT721Contract
    network: {{network}}
    source:
      address: "{{nft721Address}}"
      abi: NFT721Contract
      startBlock: {{startBlock.nft721}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - CollectionContract
      abis:
        - name: NFT721Contract
          file: ../artifacts/contracts/archive/FNDNFT721.sol/FNDNFT721.json
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
      eventHandlers:
        # TODO use the nft template for the shared contract instead
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: BaseURIUpdated(string)
          handler: handleBaseURIUpdated
        - event: TokenCreatorUpdated(indexed address,indexed address,indexed uint256)
          handler: handleTokenCreatorUpdated
        - event: Minted(indexed address,indexed uint256,indexed string,string)
          handler: handleMinted
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: TokenCreatorPaymentAddressSet(indexed address,indexed address,indexed uint256)
          handler: handleTokenCreatorPaymentAddressSet
        - event: NFTOwnerMigrated(indexed uint256,indexed address,indexed address)
          handler: handleNFTOwnerMigrated
        - event: PaymentAddressMigrated(indexed uint256,indexed address,indexed address,address,address)
          handler: handlePaymentAddressMigrated
      file: ./src/mappings/nft.ts
  {{/nft721Address}}

  - kind: ethereum/contract
    name: NFTMarketContract
    network: {{network}}
    source:
      address: "{{nftMarketAddress}}"
      abi: NFTMarketContract
      startBlock: {{startBlock.nftMarket}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTMarketContract
      abis:
        - name: NFTMarketContract
          file: ../artifacts/contracts/NFTMarket.sol/NFTMarket.json
        {{#nft721Address}}
        - name: NFT721Contract
          file: ../artifacts/contracts/archive/FNDNFT721.sol/FNDNFT721.json
        {{/nft721Address}}
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
        - name: IMarketDeprecatedAPIs
          file: ../artifacts/contracts/interfaces/subgraph/IMarketDeprecatedAPIs.sol/IMarketDeprecatedAPIs.json
      eventHandlers:
        - event: ReserveAuctionBidPlaced(indexed uint256,indexed address,uint256,uint256)
          handler: handleReserveAuctionBidPlaced
        - event: ReserveAuctionCanceled(indexed uint256)
          handler: handleReserveAuctionCanceled
        - event: ReserveAuctionCreated(indexed address,indexed address,indexed uint256,uint256,uint256,uint256,uint256)
          handler: handleReserveAuctionCreated
        - event: ReserveAuctionFinalized(indexed uint256,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleReserveAuctionFinalized
        - event: ReserveAuctionInvalidated(indexed uint256)
          handler: handleReserveAuctionInvalidated
        - event: ReserveAuctionUpdated(indexed uint256,uint256)
          handler: handleReserveAuctionUpdated
        - event: OfferMade(indexed address,indexed uint256,indexed address,uint256,uint256)
          handler: handleOfferMade
        - event: OfferAccepted(indexed address,indexed uint256,indexed address,address,uint256,uint256,uint256)
          handler: handleOfferAccepted
        - event: OfferInvalidated(indexed address,indexed uint256)
          handler: handleOfferInvalidated
        - event: BuyPriceSet(indexed address,indexed uint256,indexed address,uint256)
          handler: handleBuyPriceSet
        - event: BuyPriceCanceled(indexed address,indexed uint256)
          handler: handleBuyPriceCanceled
        - event: BuyPriceInvalidated(indexed address,indexed uint256)
          handler: handleBuyPriceInvalidated
        - event: BuyPriceAccepted(indexed address,indexed uint256,indexed address,address,uint256,uint256,uint256)
          handler: handleBuyPriceAccepted
        - event: BuyReferralPaid(indexed address,indexed uint256,address,uint256,uint256)
          handler: handleBuyReferralPaid
      file: ./src/mappings/nftMarket.ts

  {{#nftDropMarketAddress}}
  - kind: ethereum/contract
    name: NFTDropMarket
    network: {{network}}
    source:
      address: "{{nftDropMarketAddress}}"
      abi: NFTDropMarketContract
      startBlock: {{startBlock.nftDropMarket}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTDropMarketContract
      abis:
        - name: NFTDropMarketContract
          file: ../artifacts/contracts/NFTDropMarket.sol/NFTDropMarket.json
        {{#nft721Address}}
        - name: NFT721Contract
          file: ../artifacts/contracts/archive/FNDNFT721.sol/FNDNFT721.json
        {{/nft721Address}}
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
        - name: NFTDropCollection
          file: ../artifacts/contracts/NFTDropCollection.sol/NFTDropCollection.json
      eventHandlers:
        - event: BuyReferralPaid(indexed address,indexed uint256,address,uint256,uint256)
          handler: handleBuyReferralPaid
        - event: CreateFixedPriceSale(indexed address,indexed address,uint256,uint256)
          handler: handleCreateFixedPriceSale
        - event: MintFromFixedPriceDrop(indexed address,indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleMintFromFixedPriceDrop
      file: ./src/mappings/nftDropMarket.ts
  {{/nftDropMarketAddress}}

  - kind: ethereum/contract
    name: MarketDeprecatedEvents
    network: {{network}}
    source:
      address: "{{nftMarketAddress}}"
      abi: MarketDeprecatedEvents
      startBlock: {{startBlock.nftMarket}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTMarketContract
      abis:
        - name: NFTMarketContract
          file: ../artifacts/contracts/NFTMarket.sol/NFTMarket.json
        {{#nft721Address}}
        - name: NFT721Contract
          file: ../artifacts/contracts/archive/FNDNFT721.sol/FNDNFT721.json
        {{/nft721Address}}
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
        - name: MarketDeprecatedEvents
          file: ../artifacts/contracts/mocks/MarketDeprecatedEvents.sol/MarketDeprecatedEvents.json
      eventHandlers:
        - event: ReserveAuctionSellerMigrated(indexed uint256,indexed address,indexed address)
          handler: handleReserveAuctionSellerMigrated
        - event: PrivateSaleFinalized(indexed address,indexed uint256,indexed address,address,uint256,uint256,uint256,uint256)
          handler: handlePrivateSaleFinalized
        - event: OfferCanceledByAdmin(indexed address,indexed uint256,string)
          handler: handleOfferCanceledByAdmin
        - event: ReserveAuctionCanceledByAdmin(indexed uint256,string)
          handler: handleReserveAuctionCanceledByAdmin
      file: ./src/mappings/nftMarket.ts

  - kind: ethereum/contract
    name: Feth
    network: {{network}}
    source:
      address: "{{fethAddress}}"
      abi: FethContract
      startBlock: {{startBlock.feth}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Feth
      abis:
        - name: FethContract
          file: ../artifacts/contracts/FETH.sol/FETH.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: ETHWithdrawn(indexed address,indexed address,uint256)
          handler: handleETHWithdrawn
        - event: BalanceLocked(indexed address,indexed uint256,uint256,uint256)
          handler: handleBalanceLocked
        - event: BalanceUnlocked(indexed address,indexed uint256,uint256)
          handler: handleBalanceUnlocked
      file: ./src/mappings/feth.ts

  - kind: ethereum/contract
    name: PercentSplit
    network: {{network}}
    source:
      address: "{{percentSplitAddress}}"
      abi: PercentSplitContract
      startBlock: {{startBlock.percentSplit}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PercentSplit
      abis:
        - name: PercentSplitContract
          file: ../artifacts/contracts/PercentSplitETH.sol/PercentSplitETH.json
      eventHandlers:
        - event: PercentSplitCreated(indexed address)
          handler: handlePercentSplitCreated
      file: ./src/mappings/percentSplit.ts
    # conditional on whole block
  {{#percentSplitV1Address}}
  - kind: ethereum/contract
    name: PercentSplitV1
    network: {{network}}
    source:
      address: "{{percentSplitV1Address}}"
      abi: PercentSplitContract
      startBlock: {{startBlock.percentSplitV1}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PercentSplit
      abis:
        - name: PercentSplitContract
          file: ../artifacts/contracts/PercentSplitETH.sol/PercentSplitETH.json
      eventHandlers:
        - event: PercentSplitCreated(indexed address)
          handler: handlePercentSplitCreated
      file: ./src/mappings/percentSplit.ts
  {{/percentSplitV1Address}}
  {{#percentSplitV2Address}}
  - kind: ethereum/contract
    name: PercentSplitV2
    network: {{network}}
    source:
      address: "{{percentSplitV2Address}}"
      abi: PercentSplitContract
      startBlock: {{startBlock.percentSplitV2}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PercentSplit
      abis:
        - name: PercentSplitContract
          file: ../artifacts/contracts/PercentSplitETH.sol/PercentSplitETH.json
      eventHandlers:
        - event: PercentSplitCreated(indexed address)
          handler: handlePercentSplitCreated
      file: ./src/mappings/percentSplit.ts
  {{/percentSplitV2Address}}
  - kind: ethereum/contract
    name: FNDCollectionFactory
    network: {{network}}
    source:
      address: "{{nftCollectionFactoryV1Address}}"
      abi: FNDCollectionFactoryContract
      startBlock: {{startBlock.nftCollectionFactoryV1}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Collection
      abis:
        - name: FNDCollectionFactoryContract
          file: ../artifacts/contracts/archive/FNDCollectionFactory.sol/FNDCollectionFactory.json
        {{#nft721Address}}
        - name: NFT721Contract
          file: ../artifacts/contracts/archive/FNDNFT721.sol/FNDNFT721.json
        {{/nft721Address}}
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
      eventHandlers:
        - event: CollectionCreated(indexed address,indexed address,indexed uint256,string,string,uint256)
          handler: handleCollectionCreated
      file: ./src/mappings/collections.ts

  {{#nftCollectionFactoryV2Address}}
  - kind: ethereum/contract
    name: NFTCollectionFactory
    network: {{network}}
    source:
      address: "{{nftCollectionFactoryV2Address}}"
      abi: NFTCollectionFactoryContract
      startBlock: {{startBlock.nftCollectionFactoryV2}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Collection
      abis:
        - name: NFTCollectionFactoryContract
          file: ../artifacts/contracts/NFTCollectionFactory.sol/NFTCollectionFactory.json
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
        - name: NFTDropCollection
          file: ../artifacts/contracts/NFTDropCollection.sol/NFTDropCollection.json
      eventHandlers:
        - event: NFTCollectionCreated(indexed address,indexed address,indexed uint256,string,string,uint256)
          handler: handleCollectionCreatedV2
        - event: NFTDropCollectionCreated(indexed address,indexed address,indexed address,string,string,string,bool,uint256,address,uint256,uint256)
          handler: handleNFTDropCollectionCreated
      file: ./src/mappings/collections.ts
  {{/nftCollectionFactoryV2Address}}

templates:
  - kind: ethereum/contract
    name: PercentSplit
    network: {{network}}
    source:
      abi: PercentSplitContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PercentSplit
      abis:
        - name: PercentSplitContract
          file: ../artifacts/contracts/PercentSplitETH.sol/PercentSplitETH.json
      eventHandlers:
        - event: PercentSplitShare(indexed address,uint256)
          handler: handlePercentSplitShare
      file: ./src/mappings/percentSplit.ts

  # Collections use the same template & entities as the shared collection
  - kind: ethereum/contract
    name: NFTCollection
    network: {{network}}
    source:
      abi: NFTCollection
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTContract
      abis:
        {{#nft721Address}}
        - name: NFT721Contract
          file: ../artifacts/contracts/archive/FNDNFT721.sol/FNDNFT721.json
        {{/nft721Address}}
        - name: NFTCollection
          file: ../artifacts/contracts/NFTCollection.sol/NFTCollection.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: BaseURIUpdated(string)
          handler: handleBaseURIUpdated
        - event: Minted(indexed address,indexed uint256,indexed string,string)
          handler: handleMinted
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: TokenCreatorPaymentAddressSet(indexed address,indexed address,indexed uint256)
          handler: handleTokenCreatorPaymentAddressSet
        - event: SelfDestruct(indexed address)
          handler: handleSelfDestruct
      file: ./src/mappings/nft.ts

  - kind: ethereum/contract
    name: NFTDropCollection
    network: {{network}}
    source:
      abi: NFTDropCollection
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTContract
      abis:
        - name: NFTDropCollection
          file: ../artifacts/contracts/NFTDropCollection.sol/NFTDropCollection.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: URIUpdated(string,bool)
          handler: handleURIUpdated
        - event: MaxTokenIdUpdated(indexed uint256)
          handler: handleMaxTokenIdUpdated
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: SelfDestruct(indexed address)
          handler: handleSelfDestruct
      file: ./src/mappings/nft.ts
